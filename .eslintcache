[{"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\index.js":"1","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\reportWebVitals.js":"2","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\App.js":"3","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Recipes.js":"4","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\settings\\Api.js":"5","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Recipe.js":"6","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\AddRecipe.js":"7","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\styles\\Styles.js":"8","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Input.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":596,"mtime":1611812221327,"results":"13","hashOfConfig":"11"},{"size":3651,"mtime":1611821381881,"results":"14","hashOfConfig":"11"},{"size":692,"mtime":1611820750300,"results":"15","hashOfConfig":"11"},{"size":6420,"mtime":1611820488461,"results":"16","hashOfConfig":"11"},{"size":7931,"mtime":1611824286112,"results":"17","hashOfConfig":"11"},{"size":1754,"mtime":1611821461218,"results":"18","hashOfConfig":"11"},{"size":664,"mtime":1611822960257,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vmlslr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\index.js",[],["40","41"],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\reportWebVitals.js",[],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\App.js",[],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Recipes.js",["42"],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\settings\\Api.js",[],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Recipe.js",["43"],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\AddRecipe.js",["44","45","46"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { postRecipe } from \"../settings/Api\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { Input } from './Input';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLongArrowAltLeft, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { HeadingH1, HeadingH2 } from '../styles/Styles';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport {  Button } from 'react-bootstrap';\r\n\r\nimport { Formik, Form, FieldArray, Field } from \"formik\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nconst AddRecipe = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const initialData = {\r\n        uuid: uuidv4(),\r\n        title: \"\",\r\n        description: \"\",\r\n        servings: 0,\r\n        prepTime: \"\",\r\n        cookTime: \"\",\r\n        postDate: \"\",\r\n        editDate: \"\",\r\n        amount: 0,\r\n        ingredients: [\r\n            {\r\n                uuid: uuidv4(),\r\n                amount: 0,\r\n                measurement: \"\",\r\n                name: \"\",\r\n            },\r\n        ],\r\n        directions: [\r\n            {\r\n                instructions: \"\",\r\n                optional: false\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [formData, setFormData] = useState(initialData);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <HeadingH1>\r\n                    <Link to=\"/\" className=\"back-button\"><FontAwesomeIcon icon={faLongArrowAltLeft} size=\"lg\" /></Link>\r\n                    <h1>Add Recipe</h1>\r\n                </HeadingH1>\r\n                <Formik\r\n                    initialValues={formData}\r\n                    onSubmit={ async (values, { setSubmitting }) => {\r\n                        console.log(values);\r\n                        await postRecipe(values);\r\n                        history.push(\"/\");\r\n                        setSubmitting(false);\r\n                    }}\r\n                    render={({ values }) => {\r\n                    return (\r\n\r\n                        <Form>\r\n                            <Input type=\"text\" name=\"title\" placeholder=\"Title\" label=\"Title\" classname=\"form-control\" />\r\n                            <Input as=\"textarea\" name=\"description\" placeholder=\"Description\" label=\"Description\" classname=\"form-control\" />\r\n                            <Input type=\"number\" name=\"servings\" placeholder=\"Servings\" label=\"Servings\" classname=\"form-control\" />\r\n                            <Input type=\"text\" name=\"prepTime\" placeholder=\"Prep Time\" label=\"Prep Time\" classname=\"form-control\" />\r\n                            <Input type=\"text\" name=\"cookTime\" placeholder=\"Cook Time\" label=\"Cook Time\" classname=\"form-control\" />\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <HeadingH2><h2>Ingredients</h2></HeadingH2>\r\n                                    <FieldArray\r\n                                        name=\"ingredients\"\r\n                                        render={({ push }) => (\r\n                                        <Fragment>\r\n                                            <div className=\"mb-1\">\r\n                                                {values.ingredients.map((ingredients, i) => (\r\n                                                    <div key={i} className=\"mb-4\">\r\n                                                        <Input type=\"number\" name={`ingredients[${i}].amount`} placeholder=\"Amount\" label=\"Amount\" classname=\"form-control\" />\r\n                                                        <Input type=\"text\" name={`ingredients[${i}].measurement`}  placeholder=\"Measurement\" label=\"Measurement\" classname=\"form-control\" />\r\n                                                        <Input type=\"text\" name={`ingredients[${i}].name`} placeholder=\"Name\" label=\"Name\" classname=\"form-control\" />\r\n                                                        <hr/>\r\n                                                    </div>\r\n                                                ))}\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={ async () => {\r\n                                                    await push({\r\n                                                        uuid: null,\r\n                                                        amount: 0,\r\n                                                        measurement: \"\",\r\n                                                        name: \"\",\r\n                                                    });\r\n                                                    }}\r\n                                                >\r\n                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                        )}\r\n                                    >\r\n                                    </FieldArray>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <HeadingH2><h2>Directions</h2></HeadingH2>\r\n                                    <FieldArray\r\n                                        name=\"directions\"\r\n                                        render={({ push }) => (\r\n                                        <Fragment>\r\n                                            <div className=\"mb-1\">\r\n                                                {values.directions.map((directions, i) => (\r\n                                                    <div key={i} className=\"mb-4\">\r\n                                                        <Input as=\"textarea\" name={`directions[${i}].instructions`} placeholder=\"Direction\" label={`Direction ${i+1}`} classname=\"form-control\" />\r\n                                                        <hr/>\r\n                                                    </div>\r\n                                                ))}\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={ async () => {\r\n                                                    await push({\r\n                                                        uuid: null,\r\n                                                        amount: 0,\r\n                                                        measurement: \"\",\r\n                                                        name: \"\",\r\n                                                    });\r\n                                                    }}\r\n                                                >\r\n                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                        )}\r\n                                    >\r\n                                    </FieldArray>\r\n                                </Col>\r\n                                <Col md={12} className=\"mt-3 mb-5\">\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>                     \r\n                        </Form>\r\n                    );\r\n                    }}\r\n                >\r\n                </Formik>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddRecipe;","C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\styles\\Styles.js",[],"C:\\Users\\Julius\\Desktop\\Cresendo 1\\exam1\\src\\components\\Input.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":72,"column":41,"nodeType":"53","endLine":72,"endColumn":114},{"ruleId":"54","severity":1,"message":"55","line":30,"column":8,"nodeType":"56","endLine":30,"endColumn":10,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":37,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"62","line":18,"column":36,"nodeType":"60","messageId":"61","endLine":18,"endColumn":41},{"ruleId":"58","severity":1,"message":"63","line":52,"column":22,"nodeType":"60","messageId":"61","endLine":52,"endColumn":33},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadRecipe'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Field' is defined but never used.","'setFormData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [loadRecipe]",{"range":"69","text":"70"},[975,977],"[loadRecipe]"]